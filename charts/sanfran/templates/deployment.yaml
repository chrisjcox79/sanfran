## Routing Layer

apiVersion: v1
kind: Service
metadata:
  name: sanfran-routing-service
spec:
  type: NodePort
  ports:
  - name: http
    port: 80
    targetPort: 8080
  selector:
    app: sanfran-router
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: sanfran-router
spec:
  selector:
    matchLabels:
      app: sanfran-router
  replicas: 2
  template:
    metadata:
      labels:
        app: sanfran-router
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
      containers:
        - name: sanfran-router
          image: sanfran-router:{{ .Values.router.tag }}
          securityContext:
            #allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
          ports:
            - name: grpc
              containerPort: 8080
          env:
            - name: SANFRAN_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace

---
## Controller

apiVersion: v1
kind: ConfigMap
metadata:
  name: sanfran-config
data:
  controller.poolsize: "{{ .Values.controller.poolSize }}"
---
apiVersion: v1
kind: Service
metadata:
  name: sanfran-controller-service
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8080
  selector:
    app: sanfran-controller
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: sanfran-controller
spec:
  selector:
    matchLabels:
      app: sanfran-controller
  replicas: {{ .Values.controller.instances }}
  template:
    metadata:
      labels:
        app: sanfran-controller
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
      containers:
        - name: sanfran-controller
          image: sanfran-controller:{{ .Values.controller.tag }}
          securityContext:
            #allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
          ports:
            - name: grpc
              containerPort: 8080
          env:
            - name: SANFRAN_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: SANFRAN_CONTROLLER_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: SANFRAN_CONTROLLER_UID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.uid
          volumeMounts:
            - name: config-volume
              mountPath: /etc/sanfran-config
      volumes:
        - name: config-volume
          configMap:
            name: sanfran-config
---
## Functions API Service

apiVersion: v1
kind: Service
metadata:
  name: sanfran-fnapi-service
spec:
  ports:
  - name: http-grpc
    port: 80
    targetPort: 8080
  selector:
    app: sanfran-fnapi
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: sanfran-fnapi
spec:
  selector:
    matchLabels:
      app: sanfran-fnapi
  replicas: 1
  template:
    metadata:
      labels:
        app: sanfran-fnapi
    spec:
      securityContext:
        #runAsNonRoot: true
        #runAsUser: 65534
      containers:
        - name: sanfran-fnapi
          image: sanfran-fnapi:{{ .Values.fnapi.tag }}
          securityContext:
            #allowPrivilegeEscalation: false
            #readOnlyRootFilesystem: true
          ports:
            - name: http-grpc
              containerPort: 8080